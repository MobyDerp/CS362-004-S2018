        -:    0:Source:cardtest3.c
        -:    0:Graph:cardtest3.gcno
        -:    0:Data:cardtest3.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "assert.h"
        -:    2:#include "dominion.h"
        -:    3:#include <stdio.h>
        -:    4:#include "rngs.h"
        -:    5:#include <stdlib.h>
        -:    6:#include <time.h>
        -:    7:
        -:    8:// UnitTest for great_hall
        -:    9:int greatHallFunc(int currentPlayer, struct gameState *state, int handPos);
        -:   10:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus);
        -:   11:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed, struct gameState *state);
        -:   12:
function main called 1 returned 100% blocks executed 66%
        -:   13:int main (int argc, char** argv) {
        1:   14:	printf ("\n**Card Test 3 great_hall Begins **\n");
        -:   15:
        1:   16:	srand(time(NULL)); // Seed rand function
        -:   17:	/* Prepare arguments for initializeGame */
        1:   18:	int randomSeed = rand();
        -:   19:	struct gameState G;
        1:   20:	int k[10] = {adventurer, ambassador, great_hall, village, council_room, mine, cutpurse, sea_hag, tribute, smithy};
        -:   21:
        1:   22:  initializeGame(2, k, randomSeed, &G);
        -:   23:
        1:   24:	int origAct = G.numActions;
        -:   25:
        1:   26:  cardEffect(great_hall, 0,0,0, &G, 0, NULL);
        -:   27:	//expect # numActions to be +1
        2:   28:	assert(G.numActions == origAct + 1);
branch  0 taken 0%
branch  1 taken 100%
        -:   29:
        1:   30:	if (G.numActions == origAct + 1) {
branch  0 taken 100%
branch  1 taken 0%
        1:   31:		printf("great_hall test PASSED\n");
        1:   32:	} else {
    #####:   33:		printf("great_hall test FAILED; expect actions to be +1\n");
        -:   34:	}
        -:   35:
        1:   36:	printf ("**Card Test 3 great_hall Ends**\n");
        1:   37:	return 0;
        -:   38:}
